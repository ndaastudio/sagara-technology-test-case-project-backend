openapi: 3.0.2
info:
  title: API Documentation
  description: Test Case Project Backend Developer Intern - Sagara Technology
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
paths:
  /tasks:
    post:
      summary: Membuat task baru
      description: Membuat task baru dengan judul, konten, dan status tertentu
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task berhasil dibuat
        '400':
          description: Request tidak valid
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    get:
      summary: Mendapatkan semua task
      description: Mendapatkan daftar semua task
      tags:
        - Tasks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /tasks/{id}:
    get:
      summary: Mendapatkan task berdasarkan ID
      description: Mendapatkan task berdasarkan ID tertentu
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          description: ID task yang akan didapatkan
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
        '404':
          description: Task tidak ditemukan
        '500':
          description: Internal Server Error
    put:
      summary: Memperbarui task berdasarkan ID
      description: Memperbarui task berdasarkan ID tertentu
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          description: ID task yang akan diperbarui
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task berhasil diperbarui
        '400':
          description: Request tidak valid
        '401':
          description: Unauthorized
        '404':
          description: Task tidak ditemukan
        '500':
          description: Internal Server Error
    delete:
      summary: Menghapus task berdasarkan ID
      description: Menghapus task berdasarkan ID tertentu
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          description: ID task yang akan dihapus
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task berhasil dihapus
        '401':
          description: Unauthorized
        '404':
          description: Task tidak ditemukan
        '500':
          description: Internal Server Error
  /users/login:
    post:
      summary: Melakukan login pengguna
      description: Melakukan autentikasi pengguna dengan email dan password
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginInput'
      responses:
        '200':
          description: Berhasil login
        '400':
          description: Request tidak valid
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
components:
  schemas:
    TaskInput:
      type: object
      properties:
        title:
          type: string
          example: Task baru
        content:
          type: string
          example: Deskripsi task baru
        status:
          type: string
          example: Pending
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        status:
          type: string
    UserLoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
          example: nda@gmail.com
        password:
          type: string
          format: password
          example: nda12345
tags:
  - name: Tasks
    description: Endpoints related to managing tasks
  - name: Users
    description: Endpoints related to user management and authentication
